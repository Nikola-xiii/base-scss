@import url(https://fonts.googleapis.com/css?family=Raleway:400,200,600);

$type-scale: (
  -1: 0.75rem,  // small text
  0: 1rem,      // body text
  1: 1.333rem,  // large text
  2: 1.777rem   // main heading
);

$line-heights: (
  -1: $base-line-height,
  0: $base-line-height,
  1: $base-line-height * 2,
  2: $base-line-height * 2
);

$base-font-size: 1rem;
$base-line-height: $base-font-size * 1.25;
$body-text-color: #000;

$p-font-sizes: (
  null  : 15px,
  small : 16px,
  medium: 17px,
  large : 19px
);

$h1-font-sizes: (
  null  : 28px,
  small : 31px,
  medium: 33px,
  large : 36px
);


@function type-scale($level) {
  @return map-get($type-scale, $level);
}

// Again, we can make a helper function:
@function line-height($level) {
  @return map-get($line-height, $level);
}

@mixin type-setting($level: 0) {
  font-size: type-scale($level);
  line-height: line-height($level);
}

@mixin font-size-responsive($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Basic font colors

$link-color: blue;
$link-hover-color: #000;